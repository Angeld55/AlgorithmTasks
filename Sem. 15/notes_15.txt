Зад 1:
Рек. дек:
minOperations(1) = 0
minOperations(n) =  
1 + min {minOperations(n-1), minOperations(n/2), minOperations(n/3)}

Имаме ли припокриване ?

ДП: DP[0...n]   DP[i] - мин. брой операции, с които мога да получа i.

DP[i] = 1 + min {DP[n-1], DP[i/2] (ако i е четно), DP[i/3] (ако i се дели на 3)

Резултатът ще се пази в DP[n]

Задача 2:
Разглеждаме графът, който се получава чрез премахването на всички ребра, които са с по-голяма или равна тежест.
Проверяваме в него дали има път между start и end. (start и end са краищата на реброто)

Зад 3: С колко най-малко поправки мога да получа единия стринг от другия?
abcd
acd
aed
aef

aef

// Вмъкване на символ на произволна позииця
// Изтриване на произволен символ
// Субституция. 

//Метрика:
//L(w,u) >= 0
//L(w,u) = 0 <-> w = u
//L(w,u) = L(u,w)  
//L(w,u) + L(u,z) >= L(w,z)

L(a_1 a_2 .. a_n,  b_1 ... b_n)= ?
|w| = n , |u| = min

LD(i,j) - разстоянието между префикса на w с дължина i и префикса на u с дължина j.

LD(0,j) = j 
LD(i,0) = i

LD(i,j) = 1 сл w[i-1] = u[j-1]  LD(i-1,j-1)
		  2 сл w[i-1] != u[j-1]
min{LD(i-1,j), LD(i,j-1), LD(i-1,j-1)} + 1
 

 
DP[i][j] - разстоянието между префикса на w с дължина i и префикса на u с дължина j. 
DP[0][j] = j
DP[i][0] = i;

DP[i][j] = (1сл w[i-1] = u[j-1]) = DP[i-1][j-1]
DP[i][j] =  min{ DP[i-1][j], DP[i][j-1], DP[i-1][j-1]} + 1

Резултат:
DP[n][m]


Зад 4:
Допускаме, че existDiff(arr[1...n], k) може да се реши по-бързо

Имаме долна граница за : "Уникалност на елементи" - n * log(n).


ElementUniqueness(arr[1...n])
{
	return !existDiff(arr,0);
}

=> долна граница existDiff  n*log(n).

Задача 5.

closestPair(arr[1...n])
{
	points[1...n] - масив от точки.
	for(int i  = 0; i < n; i++)
		points.x = arr[i]
		points.y = 1;
	
	return 	closesPairOfPoints(points[1...n])
}
=> долна граница n*log(n) за closesPairOfPoints.

Задача 6.

(x,y) - мост <-> (x е бащата на y в дръвото на обхождането) (x,y) е дървесно ребро и няма ребро назад от никой връх от T[y] до x или негов предшественик

Задача 7.
Ако намерим път, то всички ребра от него трябва да са мостове.
